name: Create Tag on PR Merge

on:
  push:
    branches:
      - main

env:
  HEADERS: "-H 'Accept: application/vnd.github+json' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -H 'X-GitHub-Api-Version: 2022-11-28'"

jobs:
  create_tag_on_merge:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, '[V') && contains(github.event.head_commit.message, ']')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if commit message matches the pattern
        run: |
          commit_message="${{ github.event.head_commit.message }}"
          echo "Commit message: $commit_message"

          filtered_message=$(echo "$commit_message" | sed 's/\].*/\]/' | tr -d '#')
          echo "Filered message: $filtered_message"

          # pattern from pr-validation.yml 
          echo $filtered_message | grep -Pq '\[V\d+\.\d+\.\d+\]'

          if [ $? -eq 0 ]; then
            echo "Commit message matches the pattern.."

            # remove brackets from commit message
            filtered_message=$(echo "$filtered_message" | tr -d '[]')

            echo
            echo "Tag name: $filtered_message"

            # save $filtered_message to $TAG_NAME
            echo "TAG_NAME=$filtered_message" >> $GITHUB_ENV

          else
            echo "Commit message does not match the pattern."
            exit 1
          fi

      - name: Create Tag
        id: create_tag
        run: |
          tag_name="${{ env.TAG_NAME }}"
          git tag "${tag_name}" "${GITHUB_SHA}"

      - name: Push Tag to Origin
        if: env.TAG_NAME != ''
        run: |
          # git push origin "${{ env.TAG_NAME }}"

      - name: Get Changelog Changes
        id: get_changelog_changes
        run: |
          # Fetch PR changes in the `CHANGELOG.md` file

          # echo repository_owner
          echo ${{ github.repository_owner }}

          # echo repository_name
          echo ${{ github.event.repository.name }}

          # echo PR_BRANCH
          echo ${{ env.PR_BRANCH }}

          url="https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/compare/main...${{ env.PR_BRANCH }}"
          # echo url
          echo $url

          # echo curl
          response=$(curl -s $url ${{ env.HEADERS }})

          # echo response
          echo $response

          # get CHANGELOG.md patch
          patch = $(echo $response | jq '.files | map(select(.filename == "CHANGELOG.md")) | .[0].patch')

          # echo patch
          echo $patch
