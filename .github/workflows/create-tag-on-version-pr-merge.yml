name: Create Tag on PR Merge

on:
  push:
    branches:
      - main

env:
  HEADERS: "-H 'Accept: application/vnd.github+json' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -H 'X-GitHub-Api-Version: 2022-11-28'"

jobs:
  create_tag_on_merge:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, '[V') && contains(github.event.head_commit.message, ']')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if commit message matches the pattern
        run: |
          commit_message="${{ github.event.head_commit.message }}"
          echo "Commit message: $commit_message"

          filtered_message=$(echo "$commit_message" | sed 's/\].*/\]/' | tr -d '#')
          echo "Filered message: $filtered_message"

          # pattern from pr-validation.yml 
          echo $filtered_message | grep -Pq '\[V\d+\.\d+\.\d+\]'

          if [ $? -eq 0 ]; then
            echo "Commit message matches the pattern.."

            # remove brackets from commit message
            filtered_message=$(echo "$filtered_message" | tr -d '[]')

            echo
            echo "Tag name: $filtered_message"

            # save $filtered_message to $TAG_NAME
            echo "TAG_NAME=$filtered_message" >> $GITHUB_ENV

          else
            echo "Commit message does not match the pattern."
            exit 1
          fi

      - name: Create Tag
        id: create_tag
        run: |
          tag_name="${{ env.TAG_NAME }}"
          git tag "${tag_name}" "${GITHUB_SHA}"

      - name: Push Tag to Origin
        if: env.TAG_NAME != ''
        run: |
          # git push origin "${{ env.TAG_NAME }}"

      - name: Get changes from CHANGELOG.md
        id: get_changelog_changes
        run: |
          # Fetch the latest commit from the main branch
          git fetch origin main

          # Get the commit hash of the last commit on the main branch
          commit_hash=$(git rev-parse origin/main)

          # Check if the commit has any parents
          if [ "$(git rev-parse $commit_hash^)" = "$commit_hash" ]; then
            # If the commit has no parents, use git show directly
            changelog_changes=$(git show --diff-filter=A --format="" $commit_hash -- CHANGELOG.md | tail -n +7)
          else
            # If the commit has parents, use git diff with the commit range
            changelog_changes=$(git diff $commit_hash^..$commit_hash --diff-filter=A -- CHANGELOG.md | grep '^+')
          fi

          echo "Added lines in CHANGELOG.md:"
          echo "$changelog_changes"

          # Save the changes to $CHANGELOG_CHANGES
          echo "CHANGELOG_CHANGES=$changelog_changes" >> $GITHUB_ENV

          # Display the added lines directly in GitHub Actions
          echo "$changelog_changes"

          # Save the changes to $CHANGELOG_CHANGES
          # echo "CHANGELOG_CHANGES=$changelog_changes" >> $GITHUB_ENV
