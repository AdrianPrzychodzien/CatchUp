name: Create Pull Request with User-Specified Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the bump (e.g., "1.2.3")'
        required: true

jobs:
  version_bump_and_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org/" # Required for Yarn

      - name: package.json info
        id: info
        uses: jaywcjlove/github-action-package@main
        with:
          data: |
            {
              "version": "${{ inputs.version }}"
            }

      # Fetch tags before retrieving commit messages
      - name: Fetch Tags
        run: git fetch --tags

      # Get the latest tag from the environment variable
      - name: Get version and tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tag --abbrev=0 | cut -c 2-)
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      # Get commit messages between the latest tagged version and HEAD using the latest_tag
      - name: Get Commit Messages
        id: read_commit_messages
        run: |
          latest_tag="${{ env.LATEST_TAG }}"
          # print latest_tag with a short explanation:
          echo "Latest Tag: $latest_tag"
          # print current git branch
          echo "Current Branch: $(git branch --show-current)"
          # Get the commit range between the latest tag and HEAD
          commit_range=$(git rev-list $latest_tag..HEAD)
          # Extract commit messages using git log
          commit_messages=$(git log --pretty=format:"%s" $commit_range | awk -F"(" '{print $1}')
          echo $commit_messages > commit_messages.txt

      # Read commit_messages.txt and set the output variable
      - name: Read Commit Messages
        id: set_commit_messages
        run: |
          echo "COMMIT_MESSAGES=$(cat commit_messages.txt)" >> $GITHUB_ENV

      # Update CHANGELOG.md with the specified version and commit messages
      - name: Update CHANGELOG.md
        run: |
          # Get today's date in the format: "day.month.year"
          today=$(date +"%d.%m.%Y")
          # Get the commit messages from the environment variable
          commit_messages="${{ env.COMMIT_MESSAGES }}"
          # Construct the new content to append with today's date and commit messages
          new_content="Change were made $today, version ${{ inputs.version }}.\n$commit_messages"
          # Read the existing content of CHANGELOG.md
          existing_content=$(cat CHANGELOG.md)
          # Append the new content to the existing content, with an empty line between them
          echo -e "$new_content\n\n$existing_content" > CHANGELOG.md

      # # Update CHANGELOG.md with the specified version
      # - name: Update CHANGELOG.md
      #   run: |
      #     # Get today's date in the format: "day.month.year"
      #     today=$(date +"%d.%m.%Y")
      #     # Construct the new content to append with today's date
      #     new_content="Change were made $today, version ${{ inputs.version }}.\n- [BFR-000] test\n- [BFR-123] test2"
      #     # Read the existing content of CHANGELOG.md
      #     existing_content=$(cat CHANGELOG.md)
      #     # Append the new content to the existing content, with an empty line between them
      #     echo -e "$new_content\n\n$existing_content" > CHANGELOG.md

      # Create Pull Request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "v${{ inputs.version }}" # Replace this with the branch where you want to create the PR
          title: "[V${{ inputs.version }}]"
          body: "Automated version bump to ${{ inputs.version }}"
