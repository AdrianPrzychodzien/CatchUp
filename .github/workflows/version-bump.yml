name: Create Pull Request with User-Specified Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the bump (e.g., "1.2.3")'
        required: true

jobs:
  version_bump_and_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install the latest version of Prettier
      - name: Install prettier
        run: yarn add -D prettier

      - name: package.json info
        id: info
        uses: jaywcjlove/github-action-package@main
        with:
          data: |
            {
              "version": "${{ inputs.version }}"
            }

      # Set the latest tag to the environment variable
      - name: Get version and tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tag --abbrev=0 | cut -c 2-)
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      # Get commit messages between the latest tagged version and HEAD using the latest_tag
      - name: Get Commit Messages
        id: read_commit_messages
        run: |
          # Get the latest tag from the environment variable
          latest_tag="${{ env.LATEST_TAG }}"
          # print latest_tag with a short explanation:
          echo "Latest Tag: $latest_tag"

          # Get the commit messages between the latest tag and HEAD
          commit_messages=$(git log --pretty=format:"%s" $(git describe --tags --abbrev=0)..HEAD | awk -F"(" '{print $1}')

          # Remove trailing whitespace from commit messages
          commit_messages=$(echo "$commit_messages" | awk '{gsub(/[ \t]+$/, "")}1')

          # Convert newline-separated commit messages to space-separated
          echo "Commit Messages: $commit_messages"
          commit_messages=$(echo $commit_messages | tr '\n' ' ')

          # Write the commit messages to environment variable
          echo "COMMIT_MESSAGES=$commit_messages" >> $GITHUB_ENV

      # Update CHANGELOG.md with the specified version and commit messages
      - name: Update CHANGELOG.md
        run: |
          # Get today's date in the format: "Year-month-day"
          today=$(date +"%Y-%m-%d")

          # Get the commit messages from the environment variable
          commit_messages="${{ env.COMMIT_MESSAGES }}"

          # Insert a newline before "[" using sed
          commit_messages=$(echo "$commit_messages" | sed 's/\[/\n- \[/g')

          # Construct the new content to append with today's date and formatted commit messages
          new_content="## [v${{ inputs.version }}] - $today\n$commit_messages"

          # Read the existing content of CHANGELOG.md
          existing_content=$(cat CHANGELOG.md)

          # Append the new content to the existing content, with an empty line between them
          echo -e "$new_content\n\n$existing_content" > CHANGELOG.md

          npx prettier --write package.json CHANGELOG.md

      # Create Pull Request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "v${{ inputs.version }}"
          title: "[V${{ inputs.version }}]"
          body: "Automated version bump to ${{ inputs.version }}"

      # Trigger the lock-branch.yml workflow after creating the pull request
      - name: Trigger lock-branch.yml
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/lock-branch.yml/dispatches" \
            -d '{
              "ref": "main",
              "inputs": {
                "branch_name": "main",
                "lock": "true"
              }
            }'
